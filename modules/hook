#!/bin/sh

GUEST_NAME="$1"
HOOK_NAME="$2"
STATE_NAME="$3"
MISC="$\{@:4}"

set -e # If a script exits with an error, we should as well.

prepare_begin_start() {
    set -x

    # Stop display manager
    systemctl stop display-manager.service

    systemctl set-property --runtime -- user.slice AllowedCPUs=0,6
    systemctl set-property --runtime -- system.slice AllowedCPUs=0,6
    systemctl set-property --runtime -- init.scope AllowedCPUs=0,6

    # Unload NVIDIA kernel modules
    modprobe -r nvidia_drm nvidia_modeset nvidia_uvm nvidia

    # Load vfio module
    modprobe vfio-pci
}

release_end_stop() {
    set -x

    systemctl set-property --runtime -- user.slice AllowedCPUs=0-11
    systemctl set-property --runtime -- system.slice AllowedCPUs=0-11
    systemctl set-property --runtime -- init.scope AllowedCPUs=0-11

    # Unload vfio module
    modprobe -r vfio-pci

    # Load NVIDIA kernel modules
    modprobe nvidia_drm
    modprobe nvidia_modeset
    modprobe nvidia_uvm
    modprobe nvidia

    # Restart Display Manager
    systemctl start display-manager
}

if [ "$GUEST_NAME" = "win12" ] && [ "$HOOK_NAME" = "prepare" ] && [ "$STATE_NAME" = "begin" ]; then
    prepare_begin_start
elif [ "$GUEST_NAME" = "win12" ] && [ "$HOOK_NAME" = "release" ] && [ "$STATE_NAME" = "end" ]; then
    release_end_stop
fi

if [ "$GUEST_NAME" = "test_start" ]; then
	prepare_begin_start
elif [ "$GUEST_NAME" = "test_stop" ]; then
	release_end_stop
fi
